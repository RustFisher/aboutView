apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 16
        versionName "0.1.6"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
}

version = "0.1.6"

def siteUrl = 'https://github.com/RustFisher/aboutView'
def gitUrl = 'git@github.com:RustFisher/aboutView.git'
group = "com.rustfisher"


install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Android Custom View'
                description 'Android Custom View'
                url siteUrl

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://raw.githubusercontent.com/RustFisher/aboutView/master/License'
                    }
                }

                developers {
                    developer {
                        id 'rustfisher'
                        name 'Rust Fisher'
                        email 'rustfisher@foxmail.com'
                    }
                }

                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "FisherView"
        userOrg = 'rustfisher'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true
    }
}
